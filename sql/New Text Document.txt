SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [BIFC_ETL].[PRC_SYNC_DATA_TO_BIF_CONNECT] @Product [varchar](25),@date [date] AS
Begin

PRINT 'Need at least 1 line script.';

/*
--declare @Product varchar(25) = 'OSCE'
if (@date is null)
	select @date = DateAdd(day, -1, getutcdate());

declare @ProjectList Table (IX int identity(1,1), projectName varchar(150), sdate date, edate date)
insert into @ProjectList (projectName, sdate, edate)
select * 
from (
select 'BIFC_DS' as Project_Name, @date as sdate, @date as edate
union select 'BIFC_DSSC', @date, @date
union select 'BIFC_VP', @date, @date
union select 'BIFC_OSCE', @date, @date
union select 'BIFC_TMCM', @date, @date
union select 'BIFC_DDI', @date, @date
union select 'BIFC_DDAn', @date, @date
union select 'BIFC_DK', @date, @date
union select 'BIFC_IMSecurity', @date, @date
union select 'BIFC_TMEAC', @date, @date
union select 'BIFC_TMEE', @date, @date
union select 'BIFC_TMES', @date, @date
union select 'BIFC_TMSM', @date, @date
union select 'BIFC_TMMS', @date, @date
union select 'BIFC_TMVMI', @date, @date
union select 'BIFC_IMSS', @date, @date
union select 'BIFC_DDEI', @date, @date
union select 'BIFC_SMEX', @date, @date
union select 'BIFC_SMLD', @date, @date
union select 'BIFC_SPLX', @date, @date
union select 'BIFC_SPNT', @date, @date
union select 'BIFC_SPEMC', @date, @date
union select 'BIFC_SPNAF', @date, @date
union select 'BIFC_SPFS', @date, @date
union select 'BIFC_IMSVA', @date, @date
union select 'BIFC_IWSVA', @date, @date
union select 'BIFC_IWSS', @date, @date
union select 'BIFC_NVWE', @date, @date
union select 'BIFC_PP', @date, @date
union select 'BIFC_WFBS', @date, @date
union select 'BIFC_ATAS', @date, @date
union select 'BIFC_TMCAT', @date, @date
union select 'BIFC_DDD', @date, @date
union select 'BIFC_DDNA', @date, @date
union select 'BIFC_DDWI', @date, @date
union select 'BIFC_VNFS', @date, @date
) x 
where Project_Name like '%_' + @Product
or (Project_Name not in ('BIFC_DDI', 'BIFC_DS', 'BIFC_OSCE') and @Product is null)

declare @ix int = 1
, @sdate date
, @edate date
, @projectName varchar(150) = ''

while (@ix <= (select max(IX) from @ProjectList))
begin

select @projectName = projectName
, @sdate = sdate
, @edate = edate
from @ProjectList where IX = @ix;

declare @sql nvarchar(max) = ''
if (@projectName in ('BIFC_DS', 'BIFC_VP', 'BIFC_WFBS', 'BIFC_OSCE'))
begin

set @sql = 'declare @sdate date = ''' + format(DATEADD(month, IIF(@projectName = 'BIFC_DS', -4, -1), getutcdate()), 'yyyy/MM/01') + ''';
';
 
select @sql = @sql + 'delete m from ' + concat(Quotename('BIF_Connect'), '.', Quotename(Table_Schema), '.', Quotename(coalesce(Flat_Table_Name, Name_Value_Pair_Table_Name))) + ' m where m.[file_date]>=@sdate and not exists(select 1 from BIF_Connect_Raw.BIFC.TBL_DATA_RAW r where m.[File_ID] = r.[File_ID] and r.[File_Date]>=@sdate);
' from BIFC_ETL.TBL_PROJECT_GROUP p
where Project_Name = @projectName
and exists(select 1 from BIF_CONNECT.INFORMATION_SCHEMA.TABLES s where p.Table_Schema = s.TABLE_SCHEMA and coalesce(p.Flat_Table_Name, p.Name_Value_Pair_Table_Name) = s.TABLE_NAME)

--print @sql
exec sp_executesql @sql

end

--declare @sql nvarchar(max)=''
--, @projectName varchar(10) = 'BIFC_DDEI'
--, @sdate date = '2017/10/12'
--, @edate date = '2017/10/12'

set @sql = ''
select @sql = @sql + 'delete m from ' + concat(Quotename('BIF_Connect'), '.', Quotename(table_schema), '.', Quotename(coalesce(Flat_Table_Name, Name_Value_Pair_Table_Name))) + ' m where m.[file_date] between ''' + format(@sdate, 'yyyy/MM/dd') + ''' and ''' + format(@edate, 'yyyy/MM/dd') + ''';
', @Product = Table_Schema 
from BIFC_ETL.TBL_PROJECT_GROUP p
where Project_Name = @projectName
and exists(select 1 from BIF_CONNECT.INFORMATION_SCHEMA.TABLES s where p.Table_Schema = s.TABLE_SCHEMA and coalesce(p.Flat_Table_Name, p.Name_Value_Pair_Table_Name) = s.TABLE_NAME)

--print @sql
exec sp_executesql @sql;
exec BIF_CONNECT_RAW.BIFC_ETL.PRC_SYNC_DATA 'BIF_Connect', @projectName, @sdate, @edate;

exec [BIFC_ETL].[PRC_DEL_BIF_CONNECT_NULL_VALUE_RECORD] @Product;

select @ix = @ix + 1;

end

*/

END
GO